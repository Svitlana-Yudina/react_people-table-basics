{"version":3,"sources":["pages/HomePage.tsx","components/navigation/PageNavLink.tsx","components/navigation/Navbar.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","title","isActive","classNames","Navbar","role","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","useParams","personSlug","findParrent","parrentName","parrent","find","map","born","died","fatherName","motherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","getPeopleFromServer","useEffect","isNoPeople","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0aa5f24a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n      to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  const findParrent = (parrentName: string | null) => {\n    const parrent = people.find(person => person.name === parrentName) || null;\n\n    if (parrent) {\n      return (\n        <PersonLink person={parrent} />\n      );\n    }\n\n    return parrentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': personSlug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {findParrent(motherName)}\n              </td>\n\n              <td>\n                {findParrent(fatherName)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setPeople(await getPeople());\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const isNoPeople = people.length === 0 && !isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { Navbar } from './components/navigation/Navbar';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"*\" element={(<NotFoundPage />)} />\n            <Route path=\"/home\" element={(<Navigate to=\"/\" replace />)} />\n            <Route path=\"/\" element={(<HomePage />)} />\n            <Route path=\"people\">\n              <Route index element={(<PeoplePage />)} />\n              <Route path=\":personSlug\" element={(<PeoplePage />)} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}